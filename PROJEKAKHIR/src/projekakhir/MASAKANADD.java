/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projekakhir;

import java.io.FileOutputStream;
import java.io.IOException;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.File;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.*;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author I MASTER ZEN
 */
public class MASAKANADD extends javax.swing.JFrame {
    Connection conn;
    private DefaultTableModel resepmasakan;
    

    /**
     * Creates new form MASAKANADD
     */
    public MASAKANADD() {
        initComponents();
        conn = koneksi.getConnection();
        
        initTableModels();
        loadtampil();

        
        TABEL1.setCellSelectionEnabled(false); 
        TABEL1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); 
        TABEL1.setRowSelectionAllowed(true); 
        
        TABEL1.setDefaultEditor(Object.class, null);
        
        TABEL1.setModel(resepmasakan);

       
    }
    public void exportToPDF(DefaultTableModel tableModel, String filePath) {
    Document document = new Document();
    try {
        PdfWriter.getInstance(document, new FileOutputStream(filePath));
        document.open();

        document.add(new Phrase("Data Setiap Resep\n\n"));
        
        PdfPTable table = new PdfPTable(tableModel.getColumnCount());
        
        // Header tabel
        for (int i = 0; i < tableModel.getColumnCount(); i++) {
            table.addCell(new PdfPCell(new Phrase(tableModel.getColumnName(i))));
        }

        // Data baris
        for (int row = 0; row < tableModel.getRowCount(); row++) {
            for (int col = 0; col < tableModel.getColumnCount(); col++) {
                table.addCell(new PdfPCell(new Phrase(tableModel.getValueAt(row, col).toString())));
            }
        }

        document.add(table);
        JOptionPane.showMessageDialog(this, "PDF berhasil dibuat di: " + filePath);
    } catch (DocumentException | IOException e) {
        JOptionPane.showMessageDialog(this, "Error dalam membuat PDF: " + e.getMessage());
    } finally {
        document.close();
    }
}
public void openPDF(String filePath) {
    try {
        File pdfFile = new File(filePath);
        if (pdfFile.exists()) {
            if (Desktop.isDesktopSupported()) {
                Desktop.getDesktop().open(pdfFile);
            } else {
                JOptionPane.showMessageDialog(this, "Desktop tidak didukung. Tidak bisa membuka PDF.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "File PDF tidak ditemukan di: " + filePath);
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat membuka PDF: " + e.getMessage());
    }
}
    
    
        
        
    private void initTableModels(){
        resepmasakan = new DefaultTableModel(new String[]{"ID", "NAMA MAKANAN", " ASAL DAERAH", "BAHAN", "LANGKAH-LANGKAH"},0);
        TABEL1.setModel(resepmasakan);
    }
    
    
    
    
    private void loadtampil(){
        if (resepmasakan == null) {
            JOptionPane.showMessageDialog(this, "Model tabel belum diinisialisasi!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        resepmasakan.setRowCount(0); 
        try {
            String sql = "SELECT * FROM resepbaru";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                resepmasakan.addRow(new Object[] {
                    rs.getInt("id_resep"), 
                    rs.getString("nama_makanan"), 
                    rs.getString("asal_daerah"), 
                    rs.getString("bahan"), 
                    rs.getString("langkah_langkah")
                });
            }
        } catch (SQLException e) {
            System.out.println("Error Load Data resepbaru: " + e.getMessage());
        }
    }
    
        
    
        
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TABEL1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        TXCARI = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        NAMA = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ASALMAKANAN = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        BAHAN = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        LANGKAH = new javax.swing.JTextArea();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        KEMBALI = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        TMBHFAVORIT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jPanel2.setLayout(new java.awt.CardLayout());

        jPanel5.setBackground(new java.awt.Color(0, 51, 51));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "RESEP MASAKAN", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Microsoft Uighur", 1, 36), new java.awt.Color(255, 255, 255))); // NOI18N

        TABEL1.setBackground(new java.awt.Color(0, 51, 51));
        TABEL1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        TABEL1.setForeground(new java.awt.Color(255, 255, 255));
        TABEL1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TABEL1.setColumnSelectionAllowed(true);
        TABEL1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TABEL1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TABEL1);
        TABEL1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        jLabel2.setFont(new java.awt.Font("Microsoft Uighur", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("CARI NAMA RESEP");

        TXCARI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXCARIActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(46, 46, 46)
                .addComponent(TXCARI, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(197, 197, 197))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TXCARI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );

        jPanel2.add(jPanel5, "card2");

        jPanel1.add(jPanel2);

        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jPanel18.setBackground(new java.awt.Color(0, 153, 153));
        jPanel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jLabel5.setFont(new java.awt.Font("Perpetua Titling MT", 1, 24)); // NOI18N
        jLabel5.setText("info RESEP MASAKAN");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(105, 105, 105))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));
        jPanel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jLabel6.setFont(new java.awt.Font("Microsoft Uighur", 1, 18)); // NOI18N
        jLabel6.setText("NAMA MAKANAN");

        NAMA.setEditable(false);
        NAMA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NAMAActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Microsoft Uighur", 1, 18)); // NOI18N
        jLabel7.setText("ASAL MAKANAN");

        ASALMAKANAN.setEditable(false);
        ASALMAKANAN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ASALMAKANANActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Microsoft Uighur", 1, 18)); // NOI18N
        jLabel8.setText("BAHAN");

        BAHAN.setEditable(false);
        BAHAN.setColumns(20);
        BAHAN.setRows(5);
        jScrollPane2.setViewportView(BAHAN);

        jLabel9.setFont(new java.awt.Font("Microsoft Uighur", 1, 18)); // NOI18N
        jLabel9.setText("LANGKAH - LANGKAH");

        LANGKAH.setEditable(false);
        LANGKAH.setColumns(20);
        LANGKAH.setRows(5);
        jScrollPane3.setViewportView(LANGKAH);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel22.setLayout(new java.awt.GridLayout());

        jPanel6.setLayout(new java.awt.CardLayout());

        KEMBALI.setBackground(new java.awt.Color(153, 0, 0));
        KEMBALI.setFont(new java.awt.Font("Microsoft Uighur", 1, 18)); // NOI18N
        KEMBALI.setForeground(new java.awt.Color(255, 255, 255));
        KEMBALI.setText("KEMBALI");
        KEMBALI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KEMBALIActionPerformed(evt);
            }
        });
        jPanel6.add(KEMBALI, "card2");

        jPanel22.add(jPanel6);

        jPanel8.setLayout(new java.awt.CardLayout());

        TMBHFAVORIT.setFont(new java.awt.Font("Microsoft Uighur", 1, 18)); // NOI18N
        TMBHFAVORIT.setText("TAMBAHKAN FAVORIT");
        TMBHFAVORIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TMBHFAVORITActionPerformed(evt);
            }
        });
        jPanel8.add(TMBHFAVORIT, "card2");

        jPanel22.add(jPanel8);

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3)
                            .addComponent(ASALMAKANAN)
                            .addComponent(NAMA)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NAMA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ASALMAKANAN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1175, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void KEMBALIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KEMBALIActionPerformed
        // TODO add your handling code here:
        popupmkn b = new popupmkn();
        b.setVisible(true);
        dispose();
    }//GEN-LAST:event_KEMBALIActionPerformed

    private void TABEL1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TABEL1MouseClicked
        int selectedRow = TABEL1.getSelectedRow();
    
    String namaMakanan = (String) TABEL1.getValueAt(selectedRow, 1); 
    String asalDaerah = (String) TABEL1.getValueAt(selectedRow, 2); 
    String bahan = (String) TABEL1.getValueAt(selectedRow, 3); 
    String langkahLangkah = (String) TABEL1.getValueAt(selectedRow, 4); 

    NAMA.setText(namaMakanan);
    ASALMAKANAN.setText(asalDaerah);
    BAHAN.setText(bahan);
    LANGKAH.setText(langkahLangkah);

    }//GEN-LAST:event_TABEL1MouseClicked

    private void TXCARIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXCARIActionPerformed

         try {
        java.sql.Connection conn = projekakhir.koneksi.getConnection();
        String sql;

        if (TXCARI.getText().trim().isEmpty()) {
            sql = "SELECT * FROM resepbaru";
        } else {
            sql = "SELECT * FROM resepbaru WHERE nama_makanan = ?";
        }

        java.sql.PreparedStatement pst = conn.prepareStatement(sql);

        if (!TXCARI.getText().trim().isEmpty()) {
            pst.setString(1, TXCARI.getText().trim());
        }
        ResultSet rs = pst.executeQuery();
        DefaultTableModel model = (DefaultTableModel) TABEL1.getModel();
        model.setRowCount(0);

        while (rs.next()) {
            Object[] row = {
                rs.getInt("id_resep"), 
                rs.getString("nama_makanan"),
                rs.getString("asal_daerah"),
                rs.getString("bahan"),
                rs.getString("langkah_langkah")
            };
            model.addRow(row);
        }

         if (model.getRowCount() == 0) {
        JOptionPane.showMessageDialog(null, "Data tidak ditemukan untuk: " + TXCARI.getText());
        TXCARI.setText(""); 
        sql = "SELECT * FROM resepbaru";
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();

        while (rs.next()) {
            Object[] row = {
                rs.getInt("id_resep"),
                rs.getString("nama_makanan"),
                rs.getString("asal_daerah"),
                rs.getString("bahan"),
                rs.getString("langkah_langkah")
            };
            model.addRow(row);
        }
    } else if (TXCARI.getText().trim().isEmpty()) {
    } else {
//        JOptionPane.showMessageDialog(null, "Data ditemukan dan ditampilkan di tabel.");
    }

} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage());
} finally {
    TXCARI.requestFocus();
}
    }//GEN-LAST:event_TXCARIActionPerformed

    private void ASALMAKANANActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ASALMAKANANActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ASALMAKANANActionPerformed

    private void TMBHFAVORITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TMBHFAVORITActionPerformed

          int selectedRow = TABEL1.getSelectedRow();
        if (selectedRow != -1) {
            int resepId = (int) TABEL1.getValueAt(selectedRow, 0); 
            int userId = 1;

            try {
                String checkUserSql = "SELECT * FROM signup WHERE id_user = ?";
                PreparedStatement psCheckUser = conn.prepareStatement(checkUserSql);
                psCheckUser.setInt(1, userId);
                ResultSet rsCheckUser = psCheckUser.executeQuery();

                if (!rsCheckUser.next()) {
                    JOptionPane.showMessageDialog(this, "User dengan ID " + userId + " tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                String getResepDetailsSql = "SELECT nama_makanan, asal_daerah FROM resepbaru WHERE id_resep = ?";
                PreparedStatement psGetResepDetails = conn.prepareStatement(getResepDetailsSql);
                psGetResepDetails.setInt(1, resepId);
                ResultSet rsResepDetails = psGetResepDetails.executeQuery();

                if (!rsResepDetails.next()) {
                    JOptionPane.showMessageDialog(this, "Resep dengan ID " + resepId + " tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }


                String namaMakanan = rsResepDetails.getString("nama_makanan");
                String asalMakanan = rsResepDetails.getString("asal_daerah");

                String sql = "INSERT INTO favorites (id_user, id_resep) VALUES (?, ?)";
                PreparedStatement ps = conn.prepareStatement(sql);
                ps.setInt(1, userId);  
                ps.setInt(2, resepId); 

                int affectedRows = ps.executeUpdate();

                if (affectedRows > 0) {
                    String message = "Resep '" + namaMakanan + "' asal " + asalMakanan + " berhasil ditambahkan ke favorit!";
                    JOptionPane.showMessageDialog(this, message);
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal menambahkan ke favorit.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menambahkan ke favorit.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Silakan pilih resep untuk ditambahkan ke favorit.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
        FAVORIT favoriteFrame = new FAVORIT();
        favoriteFrame.setVisible(true);
        dispose();

    }//GEN-LAST:event_TMBHFAVORITActionPerformed

    private void NAMAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NAMAActionPerformed
        // TODO add your handling code here:
        String nama = NAMA.getText();

    }//GEN-LAST:event_NAMAActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MASAKANADD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MASAKANADD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MASAKANADD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MASAKANADD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MASAKANADD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ASALMAKANAN;
    private javax.swing.JTextArea BAHAN;
    private javax.swing.JButton KEMBALI;
    private javax.swing.JTextArea LANGKAH;
    private javax.swing.JTextField NAMA;
    private javax.swing.JTable TABEL1;
    private javax.swing.JButton TMBHFAVORIT;
    private javax.swing.JTextField TXCARI;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
    


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projekakhir;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class BUATRESEP extends javax.swing.JFrame {
    Connection conn;
    private DefaultTableModel tambahresep;
    
    public BUATRESEP() {
        initComponents();
        conn = koneksi.getConnection();
        
        initTableModels();
        loadResepbaru();
        
        reseptable.setCellSelectionEnabled(false); 
        reseptable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); 
        reseptable.setRowSelectionAllowed(true); 
        
        reseptable.setDefaultEditor(Object.class, null);
        
        reseptable.setModel(tambahresep);
    }

    private void initTableModels() {
        tambahresep = new DefaultTableModel(new String[] { "ID", "NAMA MAKANAN", "ASAL DAERAH", "BAHAN", "LANGKAH-LANGKAH" }, 0);
        reseptable.setModel(tambahresep); 
        
        
    }
    
    private void loadResepbaru() {
        tambahresep.setRowCount(0); 
        try {
            String sql = "SELECT * FROM resepbaru";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                tambahresep.addRow(new Object[] {
                    rs.getInt("id_resep"), 
                    rs.getString("nama_makanan"), 
                    rs.getString("asal_daerah"), 
                    rs.getString("bahan"), 
                    rs.getString("langkah_langkah")
                });
            }
        } catch (SQLException e) {
            System.out.println("Error Load Data resepbaru: " + e.getMessage());
        }
    }

    private void resepbaru() {
        if (NAMAMKN.getText().trim().isEmpty() || 
        ASALDAERAH.getText().trim().isEmpty() || 
        BAHAN.getText().trim().isEmpty() || 
        LANGKAH.getText().trim().isEmpty()) { 
        JOptionPane.showMessageDialog(this, "Semua field harus diisi.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return; 
    }

    PreparedStatement ps = null;
    ResultSet rs = null;
    try {
        String checkSql = "SELECT COUNT(*) FROM resepbaru WHERE nama_makanan = ?";
        ps = conn.prepareStatement(checkSql);
        ps.setString(1, NAMAMKN.getText().trim());
        rs = ps.executeQuery();
        if (rs.next() && rs.getInt(1) > 0) {
            int confirm = JOptionPane.showConfirmDialog(this, 
                "Data dengan nama makanan yang sama sudah ada. Apakah Anda yakin ingin menambahkan data yang sama?", 
                "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                NAMAMKN.setText("");
                ASALDAERAH.setText("");
                BAHAN.setText("");
                LANGKAH.setText("");
                loadResepbaru(); 
                
            if (confirm != JOptionPane.YES_OPTION) {
                return; 
            }
        }

        String sql = "INSERT INTO resepbaru (nama_makanan, asal_daerah, bahan, langkah_langkah) VALUES (?, ?, ?, ?)";
        ps = conn.prepareStatement(sql);
        ps.setString(1, NAMAMKN.getText().trim());
        ps.setString(2, ASALDAERAH.getText().trim());
        ps.setString(3, BAHAN.getText().trim());
        ps.setString(4, LANGKAH.getText().trim());

        int affectedRows = ps.executeUpdate(); 
        if (affectedRows > 0) {
            JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan sebagai resep baru.");
            
            NAMAMKN.setText("");
            ASALDAERAH.setText("");
            BAHAN.setText("");
            LANGKAH.setText("");
            loadResepbaru(); 
        } else {
            JOptionPane.showMessageDialog(this, "Gagal menambahkan data resep baru.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Kesalahan saat menambah data resep baru: " + e.getMessage(), 
                                      "Kesalahan", JOptionPane.ERROR_MESSAGE);
    } finally {
        try {
            if (rs != null) rs.close();
            if (ps != null) ps.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Kesalahan saat menutup resource: " + e.getMessage(), 
                                          "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
    }
}
    

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        DELETE = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        NAMAMKN = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ASALDAERAH = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BAHAN = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        LANGKAH = new javax.swing.JTextArea();
        BERANDA = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        UBAH = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        reseptable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        HAPUS = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        TAMBAH = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        BATAL = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        DELETE.setText("DELETE");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        jPanel5.setLayout(new java.awt.CardLayout());

        jPanel6.setBackground(new java.awt.Color(153, 153, 153));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel6.setText("NAMA MAKANAN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 34, 0, 0);
        jPanel6.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 170;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(28, 18, 0, 0);
        jPanel6.add(NAMAMKN, gridBagConstraints);

        jLabel2.setText("ASAL DAERAH");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(36, 34, 0, 0);
        jPanel6.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 170;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(33, 18, 0, 0);
        jPanel6.add(ASALDAERAH, gridBagConstraints);

        jLabel3.setText("BAHAN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 34, 0, 0);
        jPanel6.add(jLabel3, gridBagConstraints);

        BAHAN.setColumns(20);
        BAHAN.setRows(5);
        jScrollPane1.setViewportView(BAHAN);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 327;
        gridBagConstraints.ipady = 78;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(27, 18, 0, 2);
        jPanel6.add(jScrollPane1, gridBagConstraints);

        jLabel4.setText("LANGKAH- LANGKAH");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(26, 34, 0, 0);
        jPanel6.add(jLabel4, gridBagConstraints);

        LANGKAH.setColumns(20);
        LANGKAH.setRows(5);
        jScrollPane2.setViewportView(LANGKAH);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 327;
        gridBagConstraints.ipady = 78;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(26, 18, 0, 2);
        jPanel6.add(jScrollPane2, gridBagConstraints);

        BERANDA.setText("KEMBALI");
        BERANDA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BERANDAActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 18, 73, 0);
        jPanel6.add(BERANDA, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Microsoft Uighur", 1, 36)); // NOI18N
        jLabel5.setText("TAMBAH RESEP BARU");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipady = -5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 2, 0, 0);
        jPanel6.add(jLabel5, gridBagConstraints);

        UBAH.setText("UBAH");
        UBAH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UBAHActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 9, 73, 0);
        jPanel6.add(UBAH, gridBagConstraints);

        jPanel5.add(jPanel6, "card2");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.CardLayout());

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));
        jPanel7.setBorder(new javax.swing.border.MatteBorder(null));

        reseptable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        reseptable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reseptableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(reseptable);

        jPanel8.setBackground(new java.awt.Color(0, 51, 51));
        jPanel8.setLayout(new java.awt.GridLayout(3, 2));

        jPanel9.setLayout(new java.awt.CardLayout());

        HAPUS.setBackground(new java.awt.Color(153, 0, 0));
        HAPUS.setFont(new java.awt.Font("Microsoft Uighur", 1, 18)); // NOI18N
        HAPUS.setForeground(new java.awt.Color(255, 255, 255));
        HAPUS.setText("HAPUS");
        HAPUS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HAPUSActionPerformed(evt);
            }
        });
        jPanel9.add(HAPUS, "card2");

        jPanel8.add(jPanel9);

        jPanel10.setLayout(new java.awt.CardLayout());

        TAMBAH.setFont(new java.awt.Font("Microsoft Uighur", 1, 18)); // NOI18N
        TAMBAH.setText("TAMBAH");
        TAMBAH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TAMBAHActionPerformed(evt);
            }
        });
        jPanel10.add(TAMBAH, "card2");

        jPanel8.add(jPanel10);

        jPanel11.setLayout(new java.awt.CardLayout());

        BATAL.setBackground(new java.awt.Color(0, 0, 0));
        BATAL.setFont(new java.awt.Font("Microsoft Uighur", 1, 18)); // NOI18N
        BATAL.setForeground(new java.awt.Color(255, 255, 255));
        BATAL.setText("BATAL");
        BATAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BATALActionPerformed(evt);
            }
        });
        jPanel11.add(BATAL, "card2");

        jPanel8.add(jPanel11);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE))
                .addGap(0, 8, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel7, "card2");

        jPanel2.add(jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BERANDAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BERANDAActionPerformed
        // TODO add your handling code here:
        popupmkn A =new popupmkn();
        A.setVisible(true);
        dispose();
    }//GEN-LAST:event_BERANDAActionPerformed

    private void TAMBAHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TAMBAHActionPerformed
        // TODO add your handling code here:
        resepbaru();
    }//GEN-LAST:event_TAMBAHActionPerformed

    private void reseptableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reseptableMouseClicked
        // TODO add your handling code here:
            int selectedRow = reseptable.getSelectedRow();
    
    if (selectedRow != -1) {
        String namaMakanan = reseptable.getValueAt(selectedRow, 1).toString(); 
        String asalDaerah = reseptable.getValueAt(selectedRow, 2).toString(); 
        String bahan = reseptable.getValueAt(selectedRow, 3).toString(); 
        String langkahLangkah = reseptable.getValueAt(selectedRow, 4).toString(); 

        NAMAMKN.setText(namaMakanan);
        ASALDAERAH.setText(asalDaerah);
        BAHAN.setText(bahan);
        LANGKAH.setText(langkahLangkah);
    }
    }//GEN-LAST:event_reseptableMouseClicked

    private void BATALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BATALActionPerformed
        // TODO add your handling code here:
        NAMAMKN.setText("");  
        ASALDAERAH.setText("");   
        BAHAN.setText("");       
        LANGKAH.setText("");     
    
    reseptable.clearSelection();  
    JOptionPane.showMessageDialog(null, "Aksi dibatalkan! Tidak ada perubahan yang diterapkan.");
    }//GEN-LAST:event_BATALActionPerformed

    private void HAPUSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HAPUSActionPerformed
        // TODO add your handling code here:
        int row = reseptable.getSelectedRow();
    
    if (row >= 0) {
        int id = (int) reseptable.getValueAt(row, 0); 

        int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                String sql = "DELETE FROM resepbaru WHERE id_resep = ?"; 
                PreparedStatement pst = conn.prepareStatement(sql);
                pst.setInt(1, id);
                int result = pst.executeUpdate();
                
                if (result > 0) {
                    JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");

                    DefaultTableModel model = (DefaultTableModel) reseptable.getModel();
                    model.removeRow(row); 
                    
                    NAMAMKN.setText(""); 
                    ASALDAERAH.setText("");  
                    BAHAN.setText("");       
                    LANGKAH.setText("");     
                } else {
                    JOptionPane.showMessageDialog(null, "Data gagal dihapus!");
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "Silakan pilih data yang ingin dihapus.");
    }
    }//GEN-LAST:event_HAPUSActionPerformed

    private void UBAHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UBAHActionPerformed

        int selectedRow = reseptable.getSelectedRow();

    if (selectedRow != -1) { 
        try {
            int id = Integer.parseInt(reseptable.getValueAt(selectedRow, 0).toString());
            String namaMakanan = NAMAMKN.getText();
            String asalDaerah = ASALDAERAH.getText();
            String bahan = BAHAN.getText();
            String langkahLangkah = LANGKAH.getText();
            
            try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/projekakhir", "root", "");
                PreparedStatement ps = conn.prepareStatement("UPDATE resepbaru SET nama_makanan = ?, asal_daerah = ?, bahan = ?, langkah_langkah = ? WHERE id_resep = ?")) {

                ps.setString(1, namaMakanan);
                ps.setString(2, asalDaerah);
                ps.setString(3, bahan);
                ps.setString(4, langkahLangkah);
                ps.setInt(5, id);

                int affectedRows = ps.executeUpdate();
                
                if (affectedRows > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil disimpan dan diupdate di database!");

                    reseptable.setValueAt(namaMakanan, selectedRow, 1);
                    reseptable.setValueAt(asalDaerah, selectedRow, 2);
                    reseptable.setValueAt(bahan, selectedRow, 3);
                    reseptable.setValueAt(langkahLangkah, selectedRow, 4);
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal mengupdate data di database.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyimpan ke database.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else { 
        JOptionPane.showMessageDialog(this, "Silakan pilih data di dalam tabel terlebih dahulu.", "Peringatan", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_UBAHActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BUATRESEP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BUATRESEP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BUATRESEP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BUATRESEP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BUATRESEP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ASALDAERAH;
    private javax.swing.JTextArea BAHAN;
    private javax.swing.JButton BATAL;
    private javax.swing.JButton BERANDA;
    private javax.swing.JButton DELETE;
    private javax.swing.JButton HAPUS;
    private javax.swing.JTextArea LANGKAH;
    private javax.swing.JTextField NAMAMKN;
    private javax.swing.JButton TAMBAH;
    private javax.swing.JButton UBAH;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable reseptable;
    // End of variables declaration//GEN-END:variables
}
